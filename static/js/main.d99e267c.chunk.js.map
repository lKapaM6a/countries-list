{"version":3,"sources":["components/List/List.module.scss","reportWebVitals.js","components/List/ListElement.js","components/List/List.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TopicCard","value","index","useState","activeState","setActiveState","activeStateDepth","setActiveStateDepth","toggleState","useCallback","prev","toggleStateDepth","className","styles","listName","toggle","opened","onClick","Continent","listItem","Country","Language","List","props","Continents","name","Countries","listData","wrapper","title","localization","listWrapper","map","ListElement","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,sBAAsB,MAAQ,oBAAoB,YAAc,0BAA0B,SAAW,uBAAuB,SAAW,uBAAuB,OAAS,qBAAqB,OAAS,uB,2ECWlNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,8BC+CCQ,EAnDG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAkB,KAAXC,MAEeC,oBAAS,IAFb,mBAE3BC,EAF2B,KAEdC,EAFc,OAGcF,oBAAS,GAHvB,mBAG3BG,EAH2B,KAGTC,EAHS,KAK5BC,EAAcC,uBAAY,WAC5BJ,GAAe,SAAAK,GAEX,OADCA,GAAQH,GAAoB,IACrBG,OAEb,IAEGC,EAAmBF,uBAAY,WACjCF,GAAoB,SAAAG,GAChB,OAAQA,OAEb,IAEH,OACI,qCACI,qBAAKE,UAAS,UAAKC,IAAOC,SAAZ,YAAwBD,IAAOE,OAA/B,YAAyCX,EAAW,UAAMS,IAAOG,QAAW,IACrFC,QAAST,EADd,SAEKP,EAAMiB,YAGVd,GACG,mCACI,sBAAKQ,UAAWC,IAAOM,SAAvB,UACI,qBACIP,UAAS,UAAKC,IAAOC,SAAZ,YAAwBD,IAAOE,OAA/B,YAAyCT,EAAgB,UAAMO,IAAOG,QAAW,IAC1FC,QAASN,EAFb,SAGKV,EAAMmB,UAGVd,GACG,mCACI,qBAAKM,UAAWC,IAAOM,SAAvB,SACI,qBAAKP,UAAWC,IAAOC,SAAvB,SACKb,EAAMoB,wBCjClCC,EAAkB,SAAAC,GAAU,IAAD,EAEJpB,mBAAS,CACrC,CACIqB,WAAY,CACR,CACIC,KAAM,SACNC,UAAW,CACP,CACID,KAAM,UACNJ,SAAU,CACN,CACII,KAAM,eAIlB,CACIA,KAAM,SACNJ,SAAU,CACN,CACII,KAAM,eAM1B,CACIA,KAAM,YAGdP,UAAW,SACXE,QAAS,UACTC,SAAU,aAhCkB,mBAE7BM,EAF6B,UAoCpC,OACI,mCACI,sBAAKf,UAAWC,IAAOe,QAAvB,UACI,oBAAIhB,UAAWC,IAAOgB,MAAtB,SAA8BC,EAAaD,QAE3C,qBAAKjB,UAAWC,IAAOkB,YAAvB,SACKJ,EAASK,KAAI,SAAC/B,EAAOC,GAClB,OACI,qBAAKU,UAAWC,IAAOM,SAAvB,SACI,cAACc,EAAD,CACIhC,MAAOA,EAEPC,MAAOA,EAAQ,GADVA,IAHyBA,cAe5D4B,EAAe,CACjBD,MAAO,kBC/DXK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5B/C,M","file":"static/js/main.d99e267c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"List_wrapper__1Qsb1\",\"title\":\"List_title__2lECO\",\"listWrapper\":\"List_listWrapper__1K0_1\",\"listItem\":\"List_listItem__2ZXu1\",\"listName\":\"List_listName__3QDs8\",\"toggle\":\"List_toggle__1YCEj\",\"opened\":\"List_opened__bw-zf\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, {useState, useCallback} from 'react'\r\nimport styles from './List.module.scss'\r\n\r\nconst TopicCard = ({value, index}) => {\r\n\r\n    const [activeState, setActiveState] = useState(false);\r\n    const [activeStateDepth, setActiveStateDepth] = useState(false);\r\n\r\n    const toggleState = useCallback(() => {\r\n        setActiveState(prev => {\r\n            !prev && setActiveStateDepth(false)\r\n            return !prev\r\n        })\r\n    }, [])\r\n\r\n    const toggleStateDepth = useCallback(() => {\r\n        setActiveStateDepth(prev => {\r\n            return !prev\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className={`${styles.listName} ${styles.toggle} ${activeState ? `${styles.opened}` : ''}`}\r\n                 onClick={toggleState}>\r\n                {value.Continent}\r\n            </div>\r\n\r\n            {activeState && (\r\n                <>\r\n                    <div className={styles.listItem}>\r\n                        <div\r\n                            className={`${styles.listName} ${styles.toggle} ${activeStateDepth ? `${styles.opened}` : ''}`}\r\n                            onClick={toggleStateDepth}>\r\n                            {value.Country}\r\n                        </div>\r\n\r\n                        {activeStateDepth && (\r\n                            <>\r\n                                <div className={styles.listItem}>\r\n                                    <div className={styles.listName}>\r\n                                        {value.Language}\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TopicCard;\r\n","import React, {FC, useState} from 'react'\r\nimport styles from './List.module.scss'\r\nimport ListElement from \"./ListElement\";\r\n\r\ninterface Props {\r\n    localization?: ListLocalization\r\n}\r\n\r\nexport const List: FC<Props> = props => {\r\n\r\n    const [listData, setListData] = useState([\r\n        {\r\n            Continents: [\r\n                {\r\n                    name: 'Europe',\r\n                    Countries: [\r\n                        {\r\n                            name: 'Ukraine',\r\n                            Language: [\r\n                                {\r\n                                    name: 'Ukrainian'\r\n                                }\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'Turkey',\r\n                            Language: [\r\n                                {\r\n                                    name: 'Turkish'\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                },\r\n                {\r\n                    name: 'America',\r\n                }\r\n            ],\r\n            Continent: 'Europe',\r\n            Country: 'Andorra',\r\n            Language: 'Catalan',\r\n        },\r\n    ]);\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.wrapper}>\r\n                <h1 className={styles.title}>{localization.title}</h1>\r\n\r\n                <div className={styles.listWrapper}>\r\n                    {listData.map((value, index) => {\r\n                        return (\r\n                            <div className={styles.listItem} key={index}>\r\n                                <ListElement\r\n                                    value={value}\r\n                                    key={index}\r\n                                    index={index + 1}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst localization = {\r\n    title: 'Countries list',\r\n}\r\n\r\nexport interface ListLocalization {\r\n    title: string,\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {List} from \"./components/List/List\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <List/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}